{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { format } from 'date-fns';\nconst loadState = () => {\n  try {\n    const savedState = localStorage.getItem('attendanceState');\n    return savedState ? JSON.parse(savedState) : null;\n  } catch (err) {\n    return null;\n  }\n};\nconst saveState = state => {\n  try {\n    localStorage.setItem('attendanceState', JSON.stringify(state));\n    // 출석 기록 히스토리 저장\n    localStorage.setItem('attendanceHistory', JSON.stringify(state.history));\n  } catch (err) {\n    console.error('Failed to save state:', err);\n  }\n};\nconst initialState = loadState() || {\n  todayCount: 0,\n  history: {},\n  lastReset: new Date().toISOString()\n};\nconst attendanceSlice = createSlice({\n  name: 'attendance',\n  initialState,\n  reducers: {\n    markAttendance: state => {\n      const today = format(new Date(), 'yyyy-MM-dd');\n      state.todayCount += 1;\n      state.history[today] = (state.history[today] || 0) + 1;\n      saveState(state);\n    },\n    endDay: state => {\n      state.todayCount = 0;\n      saveState(state);\n    },\n    endWeek: state => {\n      state.todayCount = 0;\n      state.history = {};\n      state.lastReset = new Date().toISOString();\n      saveState(state);\n    }\n  }\n});\nexport const {\n  markAttendance,\n  endDay,\n  endWeek\n} = attendanceSlice.actions;\n\n// 미들웨어: 매주 월요일 자동 초기화\nexport const weeklyResetMiddleware = store => next => action => {\n  const result = next(action);\n  const state = store.getState();\n  const lastReset = state.attendance.lastReset ? new Date(state.attendance.lastReset) : null;\n  const now = new Date();\n  if (lastReset) {\n    const daysSinceReset = Math.floor((now - lastReset) / (1000 * 60 * 60 * 24));\n    const isMonday = now.getDay() === 1;\n    if (daysSinceReset >= 7 && isMonday) {\n      store.dispatch(endWeek());\n    }\n  }\n  return result;\n};\nexport default attendanceSlice.reducer;","map":{"version":3,"names":["createSlice","format","loadState","savedState","localStorage","getItem","JSON","parse","err","saveState","state","setItem","stringify","history","console","error","initialState","todayCount","lastReset","Date","toISOString","attendanceSlice","name","reducers","markAttendance","today","endDay","endWeek","actions","weeklyResetMiddleware","store","next","action","result","getState","attendance","now","daysSinceReset","Math","floor","isMonday","getDay","dispatch","reducer"],"sources":["/Users/mk/Photo/블로그/[Coding]blog_Ai/DLAB-Kevin/src/redux/slices/attendanceSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { format } from 'date-fns';\n\nconst loadState = () => {\n  try {\n    const savedState = localStorage.getItem('attendanceState');\n    return savedState ? JSON.parse(savedState) : null;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst saveState = (state) => {\n  try {\n    localStorage.setItem('attendanceState', JSON.stringify(state));\n    // 출석 기록 히스토리 저장\n    localStorage.setItem('attendanceHistory', JSON.stringify(state.history));\n  } catch (err) {\n    console.error('Failed to save state:', err);\n  }\n};\n\nconst initialState = loadState() || {\n  todayCount: 0,\n  history: {},\n  lastReset: new Date().toISOString(),\n};\n\nconst attendanceSlice = createSlice({\n  name: 'attendance',\n  initialState,\n  reducers: {\n    markAttendance: (state) => {\n      const today = format(new Date(), 'yyyy-MM-dd');\n      state.todayCount += 1;\n      state.history[today] = (state.history[today] || 0) + 1;\n      saveState(state);\n    },\n    endDay: (state) => {\n      state.todayCount = 0;\n      saveState(state);\n    },\n    endWeek: (state) => {\n      state.todayCount = 0;\n      state.history = {};\n      state.lastReset = new Date().toISOString();\n      saveState(state);\n    },\n  },\n});\n\nexport const { markAttendance, endDay, endWeek } = attendanceSlice.actions;\n\n// 미들웨어: 매주 월요일 자동 초기화\nexport const weeklyResetMiddleware = store => next => action => {\n  const result = next(action);\n  \n  const state = store.getState();\n  const lastReset = state.attendance.lastReset ? new Date(state.attendance.lastReset) : null;\n  const now = new Date();\n  \n  if (lastReset) {\n    const daysSinceReset = Math.floor((now - lastReset) / (1000 * 60 * 60 * 24));\n    const isMonday = now.getDay() === 1;\n    \n    if (daysSinceReset >= 7 && isMonday) {\n      store.dispatch(endWeek());\n    }\n  }\n  \n  return result;\n};\n\nexport default attendanceSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}